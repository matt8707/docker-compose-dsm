services:

  bazarr:
    container_name: bazarr
    image: ghcr.io/linuxserver/bazarr
    volumes:
      - /volume1/docker/bazarr:/config
      - /volume1/data/media/movies:/movies
      - /volume1/data/media/tv:/tv
      - /volume1/data:/data
    network_mode: bridge
    ports:
      - 6767:6767
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
    restart: always

  eclipse-mosquitto:
    container_name: eclipse-mosquitto
    image: eclipse-mosquitto
    volumes:
      - /volume1/docker/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - /volume1/docker/mosquitto/data:/mosquitto/data
      - /volume1/docker/mosquitto/log:/mosquitto/log
    network_mode: bridge
    ports:
      - 1883:1883
      - 9001:9001
    restart: always

  esphome:
    container_name: esphome
    image: esphome/esphome
    volumes:
      - /volume1/docker/esphome:/config:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
    network_mode: host
    restart: always

  freshrss:
    container_name: freshrss
    image: freshrss/freshrss
    volumes:
      - /volume1/docker/freshrss:/var/www/FreshRSS/data
    network_mode: bridge
    ports:
      - 8089:80
    environment:
      - TZ=${TZ}
      - CRON_MIN=13,43
    logging:
      options:
        max-size: 10m
    restart: always

  ha-dockermon:
    container_name: ha-dockermon
    image: philhawthorne/ha-dockermon
    volumes:
      - /volume1/docker/ha-dockermon:/config
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    ports:
      - 8126:8126
    depends_on:
      - home-assistant
    restart: always

  home-assistant:
    container_name: home-assistant
    image: homeassistant/home-assistant
    volumes:
      - /volume1/docker/hass-config:/config
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/bus/usb:/dev/bus/usb
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    network_mode: host
    depends_on:
      - mariadb
      - eclipse-mosquitto
    restart: always

  # hass-dev:
  #   container_name: hass-dev
  #   image: homeassistant/home-assistant
  #   volumes:
  #     - /volume1/docker/hass-dev:/config
  #   network_mode: bridge
  #   ports:
  #     - 8124:8123
  #   restart: unless-stopped

  influxdb:
    container_name: influxdb
    image: influxdb:1.8.10
    volumes:
      - /volume1/docker/influxdb/:/var/lib/influxdb
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    ports:
      - 8086:8086
    environment:
      - INFLUXDB_DB=home_assistant
    restart: always

  mariadb:
    container_name: mariadb
    image: mariadb
    volumes:
      - /volume1/docker/mariadb:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    ports:
      - 3306:3306
    environment:
      - MARIADB_DATABASE=homeassistant
      - MARIADB_ROOT_PASSWORD=${MARIADB_PASSWORD}
      - MARIADB_USER=homeassistant
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
    restart: always

  plex:
    container_name: plex
    image: ghcr.io/linuxserver/plex
    volumes:
      - /volume1/docker/plex/config:/config
      - /volume1/data/media/tv:/tv
      - /volume1/data/media/movies:/movies
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
    restart: always

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/linuxserver/prowlarr:develop
    volumes:
      - /volume1/docker/prowlarr:/config
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    ports:
      - 9696:9696
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
    restart: always

  ps5-mqtt:
    container_name: ps5-mqtt
    image: ghcr.io/funkeyflo/ps5-mqtt/amd64
    volumes:
      - /volume1/docker/ps5-mqtt:/config
    network_mode: host
    entrypoint: /config/run.sh
    environment:
      - MQTT_HOST=${MQTT_HOST}
      - DEVICE_CHECK_INTERVAL=5000
      - DEVICE_DISCOVERY_INTERVAL=60000
      - INCLUDE_PS4_DEVICES=false
      - FRONTEND_PORT=8645
      - CREDENTIAL_STORAGE_PATH=/config/credentials.json
      - TZ=${TZ}
      - DEBUG=@ha:ps5:*
    restart: always

  radarr:
    container_name: radarr
    image: ghcr.io/linuxserver/radarr
    volumes:
      - /volume1/docker/radarr:/config
      - /volume1/data/media/movies:/movies
      - /volume1/data/downloads:/downloads
      - /volume1/data:/data
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
    restart: always

  sonarr:
    container_name: sonarr
    image: ghcr.io/linuxserver/sonarr
    volumes:
      - /volume1/docker/sonarr:/config
      - /volume1/data/media/tv:/tv
      - /volume1/data/downloads:/downloads
      - /volume1/data:/data
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
    restart: always

  transmission-hass-proxy:
    container_name: transmission-hass-proxy
    image: haugene/transmission-openvpn-proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    ports:
      - 9092:8080
    links:
      - transmission
    labels:
      - com.centurylinklabs.watchtower.depends-on=transmission
    depends_on:
      - transmission
    restart: always

  transmission:
    container_name: transmission
    image: haugene/transmission-openvpn
    volumes:
      - /volume1/docker/transmission:/data
      - /volume1/data/downloads:/downloads
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    ports:
      - 9091:9091
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    environment:
      - OPENVPN_PROVIDER=${OVPN_PROVIDER}
      - OPENVPN_CONFIG=${OVPN_CONFIG}
      - OPENVPN_USERNAME=${OVPN_USERNAME}
      - OPENVPN_PASSWORD=${OVPN_PASSWORD}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - LOCAL_NETWORK=192.168.1.0/24
      - PUID=${PUID}
      - PGID=${PGID}
      - TRANSMISSION_UMASK=18
      - TRANSMISSION_DOWNLOAD_DIR=/downloads
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=40
      - TRANSMISSION_INCOMPLETE_DIR_ENABLED=false
      - TRANSMISSION_PEER_LIMIT_GLOBAL=1000
      - TRANSMISSION_PEER_LIMIT_PER_TORRENT=100
      - TRANSMISSION_WEB_UI=flood-for-transmission
    logging:
      driver: json-file
      options:
        max-size: 10m
    restart: always

  transmission-seed:
    container_name: transmission-seed
    image: haugene/transmission-openvpn
    volumes:
      - /volume1/docker/transmission-seed:/data
      - /volume1/temp/dump:/downloads
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    ports:
      - 9191:9091
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    environment:
      - OPENVPN_PROVIDER=${OVPN_PROVIDER}
      - OPENVPN_CONFIG=${OVPN_CONFIG}
      - OPENVPN_USERNAME=${OVPN_USERNAME}
      - OPENVPN_PASSWORD=${OVPN_PASSWORD}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - LOCAL_NETWORK=192.168.1.0/24
      - PUID=${PUID}
      - PGID=${PGID}
      - TRANSMISSION_UMASK=18
      - TRANSMISSION_DOWNLOAD_DIR=/downloads
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=100
      - TRANSMISSION_INCOMPLETE_DIR_ENABLED=false
      - TRANSMISSION_PEER_LIMIT_GLOBAL=1000
      - TRANSMISSION_PEER_LIMIT_PER_TORRENT=100
      - TRANSMISSION_WEB_UI=flood-for-transmission
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
      - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_RPC_USERNAME}
      - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_RPC_PASSWORD}
      - TRANSMISSION_PEX_ENABLED=false
      - TRANSMISSION_LPD_ENABLED=false
      - TRANSMISSION_DHT_ENABLED=false
    logging:
      driver: json-file
      options:
        max-size: 10m
    restart: always

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    network_mode: bridge
    labels:
      - watchtower
    command: --cleanup --interval 1 --run-once

  youtube-watching:
    container_name: youtube-watching
    image: ghcr.io/matt8707/youtube-watching
    volumes:
      - /volume1/docker/youtube-watching/config:/youtube-watching/config/
    environment:
      - COOKIE=./config/youtube.com_cookies.txt
    network_mode: bridge
    ports:
      - 5678:5678
    restart: always

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    volumes:
      - /volume1/docker/zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    privileged: true
    network_mode: host
    environment:
      - TZ=${TZ}
    restart: always
